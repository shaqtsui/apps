---
# install ansible:
# curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
# sudo python get-pip.py
# sudo pip install ansible
# ansible password connection reply on 'sshpass' which is not allowed in macOS, so add key for password free connection: cat ~/.ssh/id_rsa.pub | ssh shark@192.168.31.128 'cat >> ~/.ssh/authorized_keys'
# run with: ansible-playbook env-setup.yml -v -i hosts.yml
#
# for windows:
# guest host config:
# enable ssh server feature in optional features
# start sshd service(only this service will generate sshd related config file): Start-Service sshd
# add authorized_key in: C:\ProgramData\ssh\administrators_authorized_keys
# fix file permission(disable permission inheritance): icacls administrators_authorized_keys /inheritance:r
# add user(the one who start sshd) permission if needed
# see my-congnition for more info


- hosts: nix
  tasks:
    - name: add pub key to authorized_keys to support password free login
      authorized_key: user="{{ ansible_user }}" key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

    - package:
        name:
          - curl
          - youtube-dl
          - ffmpeg
          - ispell
          - clojure
          - maven
          - leiningen
          - postgresql
          - emacs
          - aria2
          - nodejs
          - gpg
          - jupyter
          - git-lfs
          - scc
      become: "{{ package_become }}"

    - git:
        repo: https://github.com/xfcjscn/apps.git
        dest: ~/Projects/apps
        update: no
          
    - file:
        path: "~/.emacs.d"
        state: directory

    - file:
        src: "~/Projects/apps/resources/emacs/init.el"
        path: "~/.emacs.d/init.el"
        state: link

    - lineinfile:
        path: ~/.julia/config/startup.jl
        create: yes
        line: ENV["JULIA_EDITOR"] = "emacsclient"

    - lineinfile:
        path: /Users/fuchengxu/.zshenv
        create: yes
        line: export PATH=/Library/TeX/texbin:$PATH

    - git_config:
        name: user.email
        value: xfcjscn@gmail.com
        scope: global

    - git_config:
        name: user.name
        value: xfcjscn
        scope: global

    - openssh_keypair:
        path: ~/.ssh/id_rsa


# this not required most of the time
- hosts: linux
  tasks:
#    - snap:
#        name:
#          - android-studio
#        classic: yes
#      become: yes
    
- hosts: mac
  tasks:
    - shell: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
      args:
        creates: /usr/local/bin/brew

    - shell: brew --repo
      register: brew_repo

    - shell: brew --repo homebrew/core
      register: brew_core_repo

    - shell: brew --repo homebrew/cask
      register: brew_cask_repo
      
    - git_config:
        name: remote.origin.url
        scope: local
        repo: "{{ brew_repo.stdout }}"
        value: https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git

    - git_config:
        name: remote.origin.url
        scope: local
        repo: "{{ brew_core_repo.stdout }}"
        value: https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git

    - git_config:
        name: remote.origin.url
        scope: local
        repo: "{{ brew_cask_repo.stdout }}"
        value: https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask.git
        
    - homebrew_tap:
        name: "{{ item.name }}"
      loop:
        - name: d12frosted/emacs-plus
        - name: homebrew/cask-versions

    - package:
        name:
          - emacs-plus
          
    - homebrew_cask:
        name: "{{ item.name }}"
      loop:
        - name: julia
        - name: visual-studio-code
        - name: mactex-no-gui
          desc: latex used by org to generate pdf
        - name: java
        - name: flash-npapi
          desc: flash plugin for safri
        - name: teamviewer
          desc: for remote assist
        - name: balenaetcher
          desc: iso to sd/usb

- hosts: win
  tasks:
    - win_service:
        name: "{{item.name}}"
        start_mode: auto
        state: started
      loop:
        - name: sshd
          display_name: OpenSSH SSH Server

    - win_regedit:
        path: HKLM:\SOFTWARE\OpenSSH
        name: DefaultShell
        data: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
        type: string
        state: absent

    # no need to install before this, as it will install if not available
    - win_chocolatey:
        name: "{{item}}"
      loop:
        - notepadplusplus
        - wechat
        - teamviewer
        - winrar
        - adobereader
        - vlc
        - flashplayerppapi

    - win_service:
        name: "{{item.name}}"
        start_mode: manual
      loop:
        - name: WSearch
          display_name: Windows search
        - name: WerSvc
          display_name: Windows Error Reporting Service
        - name: wuauserv
          display_name: windows update
        - name: EventLog
          display_name: Windows Event Log


